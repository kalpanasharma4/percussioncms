<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="propertyPlaceholderProps"
          class="com.percussion.delivery.utils.spring.PSPropertiesFactoryBean">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="autoSecure" value="true" />
        <property name="securedProperties">
            <list>
                <value>db.password</value>
                <value>email.password</value>
                <value>recaptcha.secret</value>
            </list>
        </property>
        <property name="properties">
            <props>
                <!-- default properties for database -->
                <prop key="jdbcUrl">jdbc:derby:file:/src/test/webapp/WEB-INF/derbydata/percforms;create=true</prop>
                <prop key="jdbcDriver">org.apache.derby.jdbc.EmbeddedDriver</prop>
                <prop key="maximumPoolSize">10</prop>
                <prop key="db.username">test</prop>
                <prop key="db.password">test</prop>
                <prop key="db.schema">APP</prop>
                <prop key="datasource">percDataSource</prop>
                <prop key="hibernateProperties">percHibernateProperties</prop>
                <prop key="hibernate.dialect">com.percussion.delivery.rdbms.DerbyTenOneFourDialect</prop>
                <prop key="hibernate.query.substitutions">true 'T', false 'F'</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="contentSecurityPolicy">default-src 'self';</prop>
                <prop key="cspReportOnly">false</prop>
                <prop key="csrfCookieHttpOnly">false</prop>
                <prop key="xframeOptionsPolicy">SAMEORIGIN</prop>
                <prop key="xssProtection">true</prop>
                <prop key="accessControlAllowedOrigins">*</prop>
                <prop key="hstsIncludeSubDomains">true</prop>
                <prop key="hstsMaxAgeSeconds">31536000</prop>
                <prop key="disableCSRFProtection">false</prop>
                <prop key="referrerPolicy">strict-origin-when-cross-origin</prop>
                <prop key="email.hostName">host</prop>
                <prop key="email.portNumber">25</prop>
                <prop key="email.userName">anon</prop>
                <prop key="email.password">anon</prop>
                <prop key="email.TLS">false</prop>
                <prop key="email.fromAddress">test@test.com</prop>
                <prop key="email.fromName">test@test.com</prop>
                <prop key="email.sslPort">4667</prop>
                <prop key="email.bounceAddress">bounce@test.com</prop>
                <prop key="recaptcha.on">false</prop>
                <prop key="recaptcha.secret">testsecret</prop>
                <prop key="recaptcha.url">https://www.google.com/recaptcha/api/siteverify</prop>
                <prop key="recaptcha.userAgent">Mozilla/5.0</prop>
                <prop key="enabledCiphers">TLS_EMPTY_RENEGOTIATION_INFO_SCSV</prop>
                <prop key="encryption.type">ENC</prop>
            </props>
        </property>
    </bean>

    <bean id="propertyConfigurer"
          class="com.percussion.delivery.utils.spring.PSPropertyPlaceholderConfigurer">
        <property name="properties" ref="propertyPlaceholderProps" />
    </bean>

    <bean id="emailProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="email.hostName">${email.hostName}</prop>
                <prop key="email.portNumber">${email.portNumber}</prop>
                <prop key="email.userName">${email.userName}</prop>
                <prop key="email.password">${email.password}</prop>
                <prop key="email.TLS">${email.TLS}</prop>
                <prop key="email.fromAddress">${email.fromAddress}</prop>
                <prop key="email.fromName">${email.fromName}</prop>
                <!-- Add the sslPort property with proper port to enable ssl -->
                <prop key="email.sslPort">${email.sslPort}</prop>
                <prop key="email.bounceAddress">${email.bounceAddress}</prop>
            </props>
        </property>
    </bean>

    <context:component-scan base-package="com.percussion.delivery.forms.impl" />
    <tx:annotation-driven transaction-manager="txManager"/>

    <import resource="file:src/test/webapp/WEB-INF/security.xml" />
    <import resource="file:src/test/webapp/WEB-INF/perc-datasources.xml" />

    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="formSessionFactory" />
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="formSessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="${datasource}" />
        </property>
        <property name="hibernateProperties">
            <ref bean="${hibernateProperties}" />
        </property>
        <property name="configLocation">
            <value>file:src/test/webapp/WEB-INF/hibernate.cfg.xml</value>
        </property>
    </bean>

    <bean id="formDao" class="com.percussion.delivery.forms.impl.rdbms.PSFormDao">
        <property name="sessionFactory">
            <ref bean="formSessionFactory" />
        </property>
    </bean>

    <!--
    <bean class="org.springframework.mock.web.MockServletContext" autowire="constructor">
        <constructor-arg index = "0" value = "file:src/test/webapp"/>
    </bean>
-->
    <bean id="recaptchaService" class="com.percussion.delivery.forms.impl.PSRecaptchaService" autowire="constructor">
        <constructor-arg index = "0" value = "${recaptcha.on}"/>
        <constructor-arg index = "1" value = "${recaptcha.url}"/>
        <constructor-arg index = "2" value = "${recaptcha.secret}"/>
        <constructor-arg index = "3" value = "${recaptcha.userAgent}"/>
    </bean>

    <bean id="emailHelper" class="com.percussion.delivery.utils.PSEmailHelper" autowire="constructor">
        <constructor-arg ref="emailProperties"/>
    </bean>

    <!-- Define Form Service bean -->
    <bean id="formService" class="com.percussion.delivery.forms.impl.PSFormService" >
        <constructor-arg ref="formDao"/>
        <property name="emailHelper">
            <ref bean="emailHelper" />
        </property>
        <property name="recaptchaService">
            <ref bean="recaptchaService" />
        </property>
    </bean>

    <bean id="formRestService" class="com.percussion.delivery.forms.impl.PSFormRestService">
        <constructor-arg index = "0" ref="formService" />
        <constructor-arg index = "1" value="${enabledCiphers}" />
    </bean>


</beans>
