<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd">

	<tx:annotation-driven transaction-manager="sys_transactionManager"/>

	<bean id="sys_dummy"
		class="com.percussion.services.PSResourceHelper">
	</bean>

	<bean id="sys_rhythmyxinfo"
		class="com.percussion.services.general.impl.PSRhythmyxInfo">
		<property name="bindings">
			<util:map>
				<entry key="UNIT_TESTING" value="false"/>
			</util:map>
		</property>
	</bean>
	
	<bean id="sys_datasourceResolver"
		class="com.percussion.utils.jdbc.PSDatasourceResolver">
		<!--<property name="repositoryDatasource" value="rxdefault"/>
		<property name="datasourceConfigurations">
			<list>
		        <bean id="rxdefault" 
		        		class="com.percussion.utils.jdbc.PSDatasourceConfig">
 		         <property name="name" value="rxdefault"/>
					<property name="dataSource" value="jdbc/rxdefault"/>
					<property name="database" value="@DB@"/>
					<property name="origin" value="@ORIGIN@"/>
		        </bean>
			</list>
		</property>		
		-->
	</bean>
	
    <bean id="sys_notificationMessageHandlerContainerQ"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
          <property name="concurrentConsumers" value="2"/>
          <property name="connectionFactory" ref="sys_jmsConnectionFactory" />
          <property name="destination" ref="sys_notificationQueueDestination" />
          <property name="messageListener" ref="sys_messageQueueService" />
          <property name="acceptMessagesWhileStopping" value="true"/>
    </bean>
	
	<bean id="sys_emailMessageHandlerContainerQ"
		  class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		  <property name="concurrentConsumers" value="1"/>
		  <property name="connectionFactory" ref="sys_jmsConnectionFactory" />
		  <property name="destination" ref="sys_emailQueueDestination" />
		  <property name="messageListener" ref="sys_emailQueueListener" />
        <property name="acceptMessagesWhileStopping" value="true"/>
	</bean>
			
	<bean id="sys_emailQueueListener" 
		class="com.percussion.services.system.impl.PSEmailMessageHandler">
	</bean>
    
	<bean id="sys_hibernateDialects"
		class="com.percussion.services.datasource.PSHibernateDialectConfig">
		<property name="dialects">
			<util:map>
                <entry key="jtds:sqlserver" value="org.hibernate.dialect.SQLServer2012Dialect"/>
                <entry key="sqlserver" value="org.hibernate.dialect.SQLServer2012Dialect"/>
                <entry key="inetdae7" value="org.hibernate.dialect.SQLServer2012Dialect"/>
                <entry key="oracle:thin" value="org.hibernate.dialect.Oracle12cDialect"/>
                <entry key="db2" value="org.hibernate.dialect.DB2Dialect"/>
                <entry key="derby" value="com.percussion.services.datasource.DerbyTenOneFourDialect"/>
                <entry key="mysql" value="org.hibernate.dialect.MySQLInnoDBDialect"/>
			</util:map>
		</property>		
	</bean>
	
	<bean id="sys_beanConfiguration"
		class="com.percussion.services.utils.general.PSServiceConfigurationBean">
		<!-- Properties that can be set here:
			<property name="maxCachedContentNodeSize" value="0"/> 
				(the max number of content nodes cached by the assembly service, defaults to 0.) 
			<property name="quartzThreadCount" value="3"/>
				(the max number of concurrent jobs triggered by the quartz scheduler, defauts to 3.) 
			<property name="publishJobTimeout" value="600"/>
				(the timeout that a publishing job to wait for the job specific status updates from the processed publishing work, defaults to 600 minutes or 10 hours.)
			<property name="publishQueueTimeout" value="10"/>
				(the timeout that a publishing job to wait for the notification of any publishing job status updates (from the queue). This is acting like a heart-beat of the publishing queue, defaults to 10 minutes)
			<property name="useHttpsForSecureSite" value="true"/>
				(the flag determines if the secure site requires HTTPS, defaults to true; 
				otherwise all secured sections or pages can be accessed by HTTP and HTTPS is not required.)
		-->
	</bean>

	<bean id="sys_deliveryManager"
		class="com.percussion.rx.delivery.impl.PSLocalDeliveryManager">
		<!-- Property for specifying temporary directory to store assembled 
		     content before deliver/commit to target location.
		     The default temporary directory is "temp/publish" under the
		     Rhythmyx installation directory.
		    -->
		<property name="tempDir">
			<value>#{ systemProperties['java.io.tmpdir'] }/cms-temp/publish</value>
		</property>

	</bean>	
	
	
	<bean id="sys_designObjectAuditConfig" 
		class="com.percussion.services.audit.data.PSDesignObjectAuditConfig">
		<property name="enabled" value="true"/>
		<property name="logRetentionDays" value="30"/>   
	</bean>
   
   <!-- Quartz support beans -->
   <bean id="sys_quartzScheduler"
         class="com.percussion.services.schedule.impl.PSSchedulerBean"
         destroy-method="destroy">
      <!-- Configurable scheduler factory properties
           org.quartz.threadPool.threadCount property is defined in sys_beanConfiguration
      -->
      <property name="quartzProperties">
         <value>
            org.quartz.scheduler.instanceName=DefaultQuartzScheduler
            org.quartz.scheduler.rmi.export=false
            org.quartz.scheduler.rmi.proxy=false
            org.quartz.scheduler.wrapJobExecutionInUserTransaction=false
            org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
            org.quartz.threadPool.threadCount=2
            org.quartz.threadPool.threadPriority=5
            org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
            org.quartz.jobStore.misfireThreshold=60000
            org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
            org.quartz.jobStore.tablePrefix=PSX_Q
            org.quartz.jobStore.dataSource=rhythmyxDataSource
            org.quartz.dataSource.rhythmyxDataSource.connectionProvider.class=com.percussion.services.schedule.impl.PSRhythmyxConnectionProvider
         </value>
      </property>
      <property name="datasourceManager" ref="sys_datasourceManager"/>
      <property name="configurationBean" ref="sys_beanConfiguration"/>
   </bean>
   
   	<bean id="sys_schedulingService"
      class="com.percussion.services.schedule.impl.PSSchedulingService">
      <property name="scheduler" ref="sys_quartzScheduler"/>
   </bean>
   
   <!-- Test service used only for AOP based web service security testing
   <bean id="sys_securityAopTestWebService" 
      class="com.percussion.webservices.aop.security.impl.PSSecurityAopTestImplWs" />     
   <bean id="sys_securityAopTestWebServiceDesign" 
      class="com.percussion.webservices.aop.security.impl.PSSecurityAopTestImplDesignWs" />     
      -->
      
</beans>
